<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="$this.Locked" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAAAACDAAAAvwAA
        AOcBAAD7AQAA+wAAAOcAAADAAAAAhAAAADEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD8AAADEQSQS/35L
        Kf+aXTX/qmc7/6xoPP+saDz/qmc7/5pcNf99Sin/QCQR/wAAAMUAAABBAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAkAAACaQSQR/pNY
        Mv+oZTr/g04s/1kzG/8fDwb/BQUF/wUFBf8fDwb/WTMb/4NOLP+oZTr/klgy/0AjEf4AAACcAAAACgAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAASAAAAyG5B
        I/+qZzv/d0Yn/zk2Nf+lpaX/2NjY//Pz8/+4uLj/uLi4//Pz8//Y2Nj/paWl/zo2Nf93Ryf/qmY7/21A
        I/8AAADJAAAAEwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACQAA
        AMh8SSn/pGM5/0MmE/+goKD/8/Pz/////////////////8DAwP/AwMD/////////////////8/Pz/6Cg
        oP9DJhP/pGM5/3tJKP8AAADJAAAACgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAACabkEj/6VjOf8yGwz/p6en////////////////////////////////////////////////////
        /////////////7Kysv8yGwz/pWM5/21AI/8AAACcAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAP0EkEf6rZzv/RScT/6+vr/9LS0v/3Nzc////////////////////////////////////
        ///////////////////q6ur/TU1N/6Ojo/9GJxT/q2c7/0AjEf4AAABBAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAADCk1gy/3pIKP+cnJz//////+bm5v/k5OT/////////////////////////
        /////////////////////////////+7u7v/c3Nz//////5ycnP97SSj/klgy/wAAAMUAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAL0EkEv+qZzv/NS8t//Hx8f//////////////////////////////
        ////////////////////////////////////////////////////////8fHx/zUvLf+qZzv/QCMR/wAA
        ADEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACBfksp/4dRLf+enp7/////////////////////////
        ////////////////////////////////////////////////////////////////////////np6e/4hR
        Lf99Sin/AAAAhAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAL2aXTX/YTge/9PT0///////////////
        /////////Pz8/21tbf/X19f/////////////////////////////////////////////////////////
        ///S0tL/YTke/5pcNf8AAADAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA5atnO/8zHA3/7e3t////
        ////////////////////////3t7e/1paWv+rq6v/ysrK/8rKyv/9/f3/////////////////////////
        /////////////+3t7f8zHA3/qmc7/wAAAOgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAD4sWs+/wUC
        Af+3t7f/w8PD//7+/v//////////////////////9fX1/4aGhv9RLhj/US8Y/8rKyv//////////////
        ///////////////////IyMj/t7e3/wYDAf+xaz3/AQAA+gAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAEA
        APexaz7/CwQC/6ampv+0tLT//f39////////////////////////////ysrK/1IvGP9RLhj/ysrK////
        /////////////////////////////7q6uv+mpqb/CwUC/7FrPv8BAAD6AAAAAQAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAA5apnO/87IBD/6+vr///////////////////////////////////////9/f3/nJyc/52d
        nf/9/f3//////////////////////////////////////+vr6/87IRD/qmc7/wAAAOcAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAC9ml01/2Y8IP/Ozs7/////////////////////////////////////////
        //+4uLj/ubm5////////////////////////////////////////////zs7O/2Y8IP+aXTX/AAAAvwAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIB+Syr/jFQv/5SUlP//////////////////////////////
        /////////////7m5uf+4uLj///////////////////////////////////////////+UlJT/jFQv/35L
        Kf8AAACDAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALkEkEv6taDz/MSMd/+zs7P//////////////
        ////////////////////////vb29/7u7u///////////////////////////////////////7Ozs/zEj
        HP+taDz/QSQS/wAAADAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwZNYMv+DTiv/jIyM//7+
        /v/n5+f/3t7e///////////////////////8/Pz//Pz8///////////////////////n5+f/3d3d//7+
        /v+MjIz/g04r/5NYMv8AAADEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA+QSQR/q1o
        PP9TMBn/o6Oj/01NTf/Y2Nj//////////////////////////////////////////////////////+bm
        5v9LS0v/mZmZ/1MwGf+taDz/QSQR/gAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAACYbkEj/6pmO/9CJRL/lZWV//7+/v//////////////////////////////////////////////
        /////////v7+/6Ghof9CJRL/qmY7/25BI/8AAACbAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAkAAADGfEkp/6pnO/9VMRr/iIiI/+np6f/////////////////AwMD/wMDA////
        /////////////+np6f+IiIj/VDAZ/6pmO/98SSn/AAAAyAAAAAkAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAALAAAABsAAADJbkEj/61pPP+GUC3/MR4U/4yMjP/IyMj/5eXl/66u
        rv+urq7/5eXl/8jIyP+MjIz/MB4U/4VPLP+taTz/bkEj/wAAAMgAAAAtAAAAGgAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEYDAwP2AAAAvgAAANsAAAC7QSQR/pNYMv+uaT3/kFYx/2w/
        I/9JKRX/JBIH/yQSB/9JKRX/bD8j/5BWMf+uaTz/k1gy/0EkEf4AAADUAAAAuQICAuACAgLgAAAAIQAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAjAAAA9nx0dv9ZU1X/AAAA2AAAAAoAAAA9AAAAwUEk
        Ev9+Syn/m101/6pnO/+ybD7/smw+/6pnO/+bXTX/fksp/0EkEv8AAADCAAAAPgAAACUCAQH4cGlr/2hh
        Y/8AAADcAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAACjTEdJ/4yDhv8tKiv/AAAAcAAA
        AAAAAAAAAAAALgAAAIEAAAC+AAAA7gEBAf8BAQH/AAAA7wAAAL4AAACBAAAALwAAAAAAAAAAAAAAqlFL
        Tf+If4L/MzAx/gAAAGwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAACjIyAh/wAA
        ALAAAAAGAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB/QTw9/0E8Pf8AAAB/AAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAZAAAA1iMgIf4AAABtAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAMAAABgAAAABgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIBBPD3/QTw9/wAAAIAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAZAAAAUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACLAQEB+gEBAf8BAQH/AQEB+gAA
        AIsAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQEBAfqMg4b/kIeK/5CH
        iv+Mg4b/AQEB+gAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAQEB+oyD
        hv+Qh4r/kIeK/4yDhv8BAQH6AAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAACLAQEB+wEBAf8BAQH/AQEB+wAAAIsAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA/+AH//+AAf/+AAB//AAAP/gAAB/4AAAf8AAAD/AAAA/gAAAH4AAAB+AA
        AAfgAAAH4AAAA+AAAAPgAAAH4AAAB+AAAAfgAAAH8AAAD/AAAA/4AAAf+AAAH/gAAB/wAAAP4AAAB+Bg
        Bg/wfD4f+Pw/P//4H///8A////AP///4H/8=
</value>
  </data>
</root>